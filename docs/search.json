[
  {
    "objectID": "hw4.html#if-your-working-directory-is-myfolderhomework-what-relative-path-would-you-specify-to-get-the-file-located-at-myfoldermydata.csv",
    "href": "hw4.html#if-your-working-directory-is-myfolderhomework-what-relative-path-would-you-specify-to-get-the-file-located-at-myfoldermydata.csv",
    "title": "hw4",
    "section": "1. If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?",
    "text": "1. If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?\n\n../myfolder/MyData.csv"
  },
  {
    "objectID": "hw4.html#what-are-the-major-benefits-of-using-r-projects",
    "href": "hw4.html#what-are-the-major-benefits-of-using-r-projects",
    "title": "hw4",
    "section": "2. What are the major benefits of using R projects",
    "text": "2. What are the major benefits of using R projects\n\n\nCustomization of project specific settings\nAbility to debug code using the debugger\naddresses separation of concerns by providing isolation between projects\nversion control integration with R-Studio\nreproducibility - all libraries, packages, dependencies are contained within the project"
  },
  {
    "objectID": "hw4.html#what-is-git-and-what-is-github",
    "href": "hw4.html#what-is-git-and-what-is-github",
    "title": "hw4",
    "section": "3. What is git and what is GitHub?",
    "text": "3. What is git and what is GitHub?\n\nGit is an open source, distributed version control system that tracks changes to files to ensure Good Programming Practice. It provides a programming interface to document changes in files and tracks them over the lifecycle of a project and provides a way to enable collaboration among people.\n\n\nGitHub provides a web-based platform that serves as a remote or “hub” for source code management. The remote repository can be accessed over ssh and https file protocols."
  },
  {
    "objectID": "hw4.html#what-are-the-two-main-differences-between-a-tibble-and-a-data.frame",
    "href": "hw4.html#what-are-the-two-main-differences-between-a-tibble-and-a-data.frame",
    "title": "hw4",
    "section": "4. What are the two main differences between a tibble and a data.frame?",
    "text": "4. What are the two main differences between a tibble and a data.frame?\n\nThe two main differences between a tibble and a data.frame are:\n\nA tibble doesn’t do coercion, preserving the data types and placing the responsibility for data types with the human.\nTibbles provide a consistent interface when working with the tidyverse that provides efficiency and quality. Functions of the tidyverse take a tibble as input, and return a tibble as output. Data frames"
  },
  {
    "objectID": "hw4.html#rewrite-the-following-nested-function-call-using-basers-chaining-operator",
    "href": "hw4.html#rewrite-the-following-nested-function-call-using-basers-chaining-operator",
    "title": "hw4",
    "section": "5. Rewrite the following nested function call using BaseR’s chaining operator:",
    "text": "5. Rewrite the following nested function call using BaseR’s chaining operator:\n\narrange(filter(select(as_tibble(iris), starts_with(\"Petal\"), Species),\n         Petal.Length &lt; 1.55), Species)\n\n\nAnswer:\n\ndf &lt;- as_tibble(iris) |&gt;\n    select(starts_with(\"Petal\"), Species) |&gt;\n            filter(Petal.Length &lt; 1.55)"
  },
  {
    "objectID": "hw4.html#glass-data",
    "href": "hw4.html#glass-data",
    "title": "hw4",
    "section": "Glass Data",
    "text": "Glass Data\n\nRead in from URL. Add colnames\nOverwrite type variable using mutate\nsubset based on:\n\nFe &lt; 0.2\ntype in(‘tableware’,‘headlamp’)\n\n\n\nglass_data &lt;- read_csv(\"https://www4.stat.ncsu.edu/~online/datasets/glass.data\",\n    col_names = c(\"Id\", \"RI\", \"Na\", \"Mg\", \"Al\", \"Si\", \"K\", \"Ca\", \"Ba\", \"Fe\")) |&gt;\n    mutate(glass_type_c = factor(X11, levels = 1:7, \n                                 labels = c(\"building_windows_float_processed\",\n                                            \"building_windows_non_float_processed\",\n                                            \"vehicle_windows_float_processed\",\n                                            \"vehicle_windows_non_float_processed\",\n                                            \"containers\",\n                                            \"tableware\",\n                                            \"headlamp\"))) |&gt;\n    rename(glass_type_n = X11) |&gt;\n    filter(glass_type_c %in% c(\"tableware\",\"headlamp\") & Fe &lt; 0.2) |&gt;\n    select(glass_type_c, everything())\n\nRows: 214 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (11): Id, RI, Na, Mg, Al, Si, K, Ca, Ba, Fe, X11\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(glass_data)\n\n# A tibble: 38 × 12\n   glass_type_c    Id    RI    Na    Mg    Al    Si     K    Ca    Ba    Fe\n   &lt;fct&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 tableware      177  1.52  14    2.39  1.56  72.4  0     9.57  0        0\n 2 tableware      178  1.52  13.8  2.41  1.19  72.8  0     9.77  0        0\n 3 tableware      179  1.52  14.5  2.24  1.62  72.4  0     9.26  0        0\n 4 tableware      180  1.52  14.1  2.19  1.66  72.7  0     9.32  0        0\n 5 tableware      181  1.51  14.4  1.74  1.54  74.6  0     7.59  0        0\n 6 tableware      182  1.52  15.0  0.78  1.74  72.5  0     9.95  0        0\n 7 tableware      183  1.52  14.2  0     2.09  72.7  0    10.9   0        0\n 8 tableware      184  1.52  14.6  0     0.56  73.5  0    11.2   0        0\n 9 tableware      185  1.51  17.4  0     0.34  75.4  0     6.65  0        0\n10 headlamp       186  1.51  13.7  3.2   1.81  72.8  1.76  5.43  1.19     0\n# ℹ 28 more rows\n# ℹ 1 more variable: glass_type_n &lt;dbl&gt;"
  },
  {
    "objectID": "hw4.html#yeast-data",
    "href": "hw4.html#yeast-data",
    "title": "hw4",
    "section": "Yeast Data",
    "text": "Yeast Data\n\nRead in from URL. Add colnames\nremove seq_name and nuc\nadd columns for mean and median across numeric vars, by class\n\n\nyeast_data &lt;- read_table(\"https://www4.stat.ncsu.edu/~online/datasets/yeast.data\",\n                         col_names = c(\"seq_name\",\"mcg\",\"gvh\",\"alm\",\"mit\",\"erl\",\"pox\",\"vac\",\"nuc\",\n                                       \"class\")) |&gt;\n                select(-seq_name,-nuc) |&gt;\n                group_by(class) |&gt;\n                mutate(across(where(is.numeric),\n                    .fns = list(mean = ~ mean(.x, na.rm = TRUE),\n                                median = ~ median(.x, na.rm = TRUE)),\n                    .names = \"{.fn}_{.col}\")) |&gt;\n                select(class, contains(c(\"mean\",\"median\")), everything())\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  seq_name = col_character(),\n  mcg = col_double(),\n  gvh = col_double(),\n  alm = col_double(),\n  mit = col_double(),\n  erl = col_double(),\n  pox = col_double(),\n  vac = col_double(),\n  nuc = col_double(),\n  class = col_character()\n)\n\nyeast_data\n\n# A tibble: 1,484 × 22\n# Groups:   class [10]\n   class mean_mcg mean_gvh mean_alm mean_mit mean_erl mean_pox mean_vac\n   &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 MIT      0.521    0.533    0.517    0.404    0.5    0.00885    0.502\n 2 MIT      0.521    0.533    0.517    0.404    0.5    0.00885    0.502\n 3 MIT      0.521    0.533    0.517    0.404    0.5    0.00885    0.502\n 4 NUC      0.452    0.456    0.529    0.228    0.503  0          0.494\n 5 MIT      0.521    0.533    0.517    0.404    0.5    0.00885    0.502\n 6 CYT      0.481    0.470    0.535    0.227    0.504  0.00108    0.499\n 7 MIT      0.521    0.533    0.517    0.404    0.5    0.00885    0.502\n 8 NUC      0.452    0.456    0.529    0.228    0.503  0          0.494\n 9 MIT      0.521    0.533    0.517    0.404    0.5    0.00885    0.502\n10 CYT      0.481    0.470    0.535    0.227    0.504  0.00108    0.499\n# ℹ 1,474 more rows\n# ℹ 14 more variables: median_mcg &lt;dbl&gt;, median_gvh &lt;dbl&gt;, median_alm &lt;dbl&gt;,\n#   median_mit &lt;dbl&gt;, median_erl &lt;dbl&gt;, median_pox &lt;dbl&gt;, median_vac &lt;dbl&gt;,\n#   mcg &lt;dbl&gt;, gvh &lt;dbl&gt;, alm &lt;dbl&gt;, mit &lt;dbl&gt;, erl &lt;dbl&gt;, pox &lt;dbl&gt;, vac &lt;dbl&gt;"
  },
  {
    "objectID": "hw4.html#red-and-white-wine",
    "href": "hw4.html#red-and-white-wine",
    "title": "hw4",
    "section": "Red and White Wine",
    "text": "Red and White Wine\n\nDownload and import first sheet\nImport second sheet containing variable names. Overwrite colnames\nset type equal to “white”\nImport red wine and overwrite colnames. set type equal to “red”\nCombine data sets with bind_rows()\nfilter based on:\n\nquality &gt; 6.5\nalcohol &lt; 132\n\nSort descending quality\nselect vars that contain acid, alcohol, type, and quality\nadd mean and standard deviation of alcohol by quality category\n\n\ntibble(read_xlsx(path = \"./raw/white-wine.xlsx\", sheet=\"white-wine\"))\n\n# A tibble: 4,898 × 12\n   `fixed acidity` `volatile acidity` `citric acid` `residual sugar` chlorides\n             &lt;dbl&gt;              &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;     &lt;dbl&gt;\n 1               7               0.27          0.36             20.7     0.045\n 2              63               0.3           0.34              1.6     0.049\n 3              81               0.28          0.4               6.9     0.05 \n 4              72               0.23          0.32              8.5     0.058\n 5              72               0.23          0.32              8.5     0.058\n 6              81               0.28          0.4               6.9     0.05 \n 7              62               0.32          0.16              7       0.045\n 8               7               0.27          0.36             20.7     0.045\n 9              63               0.3           0.34              1.6     0.049\n10              81               0.22          0.43              1.5     0.044\n# ℹ 4,888 more rows\n# ℹ 7 more variables: `free sulfur dioxide` &lt;dbl&gt;,\n#   `total sulfur dioxide` &lt;dbl&gt;, density &lt;dbl&gt;, pH &lt;dbl&gt;, sulphates &lt;dbl&gt;,\n#   alcohol &lt;dbl&gt;, quality &lt;dbl&gt;\n\ncol_names &lt;- read_xlsx(path = \"./raw/white-wine.xlsx\", sheet=\"variables\")\n\nwhite_wine &lt;- tibble(read_xlsx(path = \"./raw/white-wine.xlsx\", sheet=\"white-wine\")) |&gt;\n                     setNames(col_names$Variables) |&gt;\n                     mutate(type = \"white\") |&gt;\n                     select(quality, alcohol, type, everything())\n\nwhite_wine\n\n# A tibble: 4,898 × 13\n   quality alcohol type  fixed_acidity volatile_acidity citric_acid\n     &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;\n 1       6      88 white             7             0.27        0.36\n 2       6      95 white            63             0.3         0.34\n 3       6     101 white            81             0.28        0.4 \n 4       6      99 white            72             0.23        0.32\n 5       6      99 white            72             0.23        0.32\n 6       6     101 white            81             0.28        0.4 \n 7       6      96 white            62             0.32        0.16\n 8       6      88 white             7             0.27        0.36\n 9       6      95 white            63             0.3         0.34\n10       6      11 white            81             0.22        0.43\n# ℹ 4,888 more rows\n# ℹ 7 more variables: residual_sugar &lt;dbl&gt;, chlorides &lt;dbl&gt;,\n#   free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;, density &lt;dbl&gt;,\n#   pH &lt;dbl&gt;, sulphates &lt;dbl&gt;\n\nred_wine &lt;- read_delim(\"./raw/red-wine.csv\", delim = \";\") |&gt;\n    setNames(col_names$Variables) |&gt;\n    mutate(type = \"red\") |&gt;\n    select(quality, alcohol, type, everything())\n\nRows: 1599 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\ndbl (12): fixed acidity, volatile acidity, citric acid, residual sugar, chlo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nred_wine\n\n# A tibble: 1,599 × 13\n   quality alcohol type  fixed_acidity volatile_acidity citric_acid\n     &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt;         &lt;dbl&gt;            &lt;dbl&gt;       &lt;dbl&gt;\n 1       5     9.4 red             7.4             0.7         0   \n 2       5     9.8 red             7.8             0.88        0   \n 3       5     9.8 red             7.8             0.76        0.04\n 4       6     9.8 red            11.2             0.28        0.56\n 5       5     9.4 red             7.4             0.7         0   \n 6       5     9.4 red             7.4             0.66        0   \n 7       5     9.4 red             7.9             0.6         0.06\n 8       7    10   red             7.3             0.65        0   \n 9       7     9.5 red             7.8             0.58        0.02\n10       5    10.5 red             7.5             0.5         0.36\n# ℹ 1,589 more rows\n# ℹ 7 more variables: residual_sugar &lt;dbl&gt;, chlorides &lt;dbl&gt;,\n#   free_sulfur_dioxide &lt;dbl&gt;, total_sulfur_dioxide &lt;dbl&gt;, density &lt;dbl&gt;,\n#   pH &lt;dbl&gt;, sulphates &lt;dbl&gt;\n\ncombined_wine &lt;- bind_rows(white_wine, red_wine) |&gt;\n                filter(quality &gt; 6.5 & alcohol &lt;132) |&gt;\n                arrange(desc(quality)) |&gt;\n                select(contains(\"acid\"), alcohol, type, quality) |&gt;\n                group_by(quality) |&gt;\n                mutate(\n                    mean_alcohol = format(mean(alcohol, na.rm = TRUE),nsmall=2),\n                    sd_alcohol = sd(alcohol, na.rm = TRUE)\n                ) |&gt;\n                select(quality, alcohol, type, mean_alcohol, sd_alcohol, everything())\noptions(digits = 7)\nprint(combined_wine)\n\n# A tibble: 1,206 × 8\n# Groups:   quality [3]\n   quality alcohol type  mean_alcohol sd_alcohol fixed_acidity volatile_acidity\n     &lt;dbl&gt;   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;         &lt;dbl&gt;            &lt;dbl&gt;\n 1       9     104 white 121.80             10.1            91             0.27\n 2       9     124 white 121.80             10.1            66             0.36\n 3       9     125 white 121.80             10.1            74             0.24\n 4       9     127 white 121.80             10.1            69             0.36\n 5       9     129 white 121.80             10.1            71             0.26\n 6       8     128 white 94.1288            42.8            62             0.66\n 7       8     128 white 94.1288            42.8            62             0.66\n 8       8     105 white 94.1288            42.8            68             0.26\n 9       8     107 white 94.1288            42.8            67             0.23\n10       8     107 white 94.1288            42.8            67             0.23\n# ℹ 1,196 more rows\n# ℹ 1 more variable: citric_acid &lt;dbl&gt;"
  }
]